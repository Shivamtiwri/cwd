{"ast":null,"code":"import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n  HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n  HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n  HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n  HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n  constructor(type, message) {\n    super(message);\n    this.name = \"HwTransportError\";\n    this.type = type;\n    // Needed as long as we target < ES6\n    Object.setPrototypeOf(this, HwTransportError.prototype);\n  }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n  constructor(message, id) {\n    const name = \"TransportError\";\n    super(message || name);\n    this.name = name;\n    this.message = message;\n    this.stack = new Error(message).stack;\n    this.id = id;\n  }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  CODE_BLOCKED: 0x9840,\n  CODE_NOT_INITIALIZED: 0x9802,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n  CUSTOM_IMAGE_EMPTY: 0x662e,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  FILE_NOT_FOUND: 0x9404,\n  GP_AUTH_FAILED: 0x6300,\n  HALTED: 0x6faa,\n  INCONSISTENT_FILE: 0x9408,\n  INCORRECT_DATA: 0x6a80,\n  INCORRECT_LENGTH: 0x6700,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  DEVICE_NOT_ONBOARDED: 0x6d07,\n  DEVICE_NOT_ONBOARDED_2: 0x6611,\n  INVALID_KCV: 0x9485,\n  INVALID_OFFSET: 0x9402,\n  LICENSING: 0x6f42,\n  LOCKED_DEVICE: 0x5515,\n  MAX_VALUE_REACHED: 0x9850,\n  MEMORY_PROBLEM: 0x9240,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  NO_EF_SELECTED: 0x9400,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  OK: 0x9000,\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  TECHNICAL_PROBLEM: 0x6f00,\n  UNKNOWN_APDU: 0x6d02,\n  USER_REFUSED_ON_DEVICE: 0x5501,\n  NOT_ENOUGH_SPACE: 0x5102\n};\nexport function getAltStatusMessage(code) {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6800:\n      return \"Missing critical parameter\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n    case 0x5515:\n      return \"Locked device\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n  /**\n   * @param statusCode The error status code coming from a Transport implementation\n   * @param options containing:\n   *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n   *  . Ex: LockedDeviceError. Default to true.\n   */\n  constructor(statusCode, {\n    canBeMappedToChildError = true\n  } = {}) {\n    const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n    const smsg = getAltStatusMessage(statusCode) || statusText;\n    const statusCodeStr = statusCode.toString(16);\n    const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n    super(message);\n    this.name = \"TransportStatusError\";\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    Object.setPrototypeOf(this, TransportStatusError.prototype);\n    // Maps to a LockedDeviceError\n    if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n      return new LockedDeviceError(message);\n    }\n  }\n}\nexport class LockedDeviceError extends TransportStatusError {\n  constructor(message) {\n    super(StatusCodes.LOCKED_DEVICE, {\n      canBeMappedToChildError: false\n    });\n    if (message) {\n      this.message = message;\n    }\n    this.name = \"LockedDeviceError\";\n    Object.setPrototypeOf(this, LockedDeviceError.prototype);\n  }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));","map":{"version":3,"names":["serializeError","deserializeError","createCustomErrorClass","addCustomErrorDeserializer","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","ClaimRewardsFeesWarning","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DeviceNeedsRestart","UnresponsiveDeviceError","DisconnectedDevice","DisconnectedDeviceDuringOperation","DeviceExtractOnboardingStateError","DeviceOnboardingStatePollingError","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidNonce","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NetworkError","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotEnoughGasSwap","NotSupportedLegacyAddress","GasLessThanEstimate","PriorityFeeTooLow","PriorityFeeTooHigh","PriorityFeeHigherThanMaxFee","MaxFeeTooLow","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","ExpertModeRequired","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","TransactionHasBeenValidatedError","TransportExchangeTimeoutError","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeNotLoadedSwap","FeeRequired","FeeTooHigh","PendingOperation","SyncError","PairingFailed","PeerRemovedPairing","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","ReplacementTransactionUnderpriced","OpReturnDataSizeLimit","DustLimit","LanguageNotFound","NoDBPathGiven","DBWrongPassword","DBNotReset","HwTransportErrorType","HwTransportError","Error","constructor","type","message","name","Object","setPrototypeOf","prototype","TransportError","id","stack","e","StatusCodes","ACCESS_CONDITION_NOT_FULFILLED","ALGORITHM_NOT_SUPPORTED","CLA_NOT_SUPPORTED","CODE_BLOCKED","CODE_NOT_INITIALIZED","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","CONDITIONS_OF_USE_NOT_SATISFIED","CONTRADICTION_INVALIDATION","CONTRADICTION_SECRET_CODE_STATUS","CUSTOM_IMAGE_BOOTLOADER","CUSTOM_IMAGE_EMPTY","FILE_ALREADY_EXISTS","FILE_NOT_FOUND","GP_AUTH_FAILED","HALTED","INCONSISTENT_FILE","INCORRECT_DATA","INCORRECT_LENGTH","INCORRECT_P1_P2","INS_NOT_SUPPORTED","DEVICE_NOT_ONBOARDED","DEVICE_NOT_ONBOARDED_2","INVALID_KCV","INVALID_OFFSET","LICENSING","LOCKED_DEVICE","MAX_VALUE_REACHED","MEMORY_PROBLEM","MISSING_CRITICAL_PARAMETER","NO_EF_SELECTED","NOT_ENOUGH_MEMORY_SPACE","OK","PIN_REMAINING_ATTEMPTS","REFERENCED_DATA_NOT_FOUND","SECURITY_STATUS_NOT_SATISFIED","TECHNICAL_PROBLEM","UNKNOWN_APDU","USER_REFUSED_ON_DEVICE","NOT_ENOUGH_SPACE","getAltStatusMessage","code","TransportStatusError","statusCode","canBeMappedToChildError","statusText","keys","find","k","smsg","statusCodeStr","toString","LockedDeviceError"],"sources":["C:\\Users\\delll\\Desktop\\mini\\node_modules\\@ledgerhq\\errors\\src\\index.ts"],"sourcesContent":["import {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer,\n  LedgerErrorConstructor,\n} from \"./helpers\";\n\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\n\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass<\n  { currencyName: string },\n  LedgerErrorConstructor<{ currencyName: string }>\n>(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\n  \"DeviceGenuineSocketEarlyClose\",\n);\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\n  \"DisconnectedDeviceDuringOperation\",\n);\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\n  \"DeviceExtractOnboardingStateError\",\n);\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\n  \"DeviceOnboardingStatePollingError\",\n);\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\n  \"EthAppPleaseEnableContractData\",\n);\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\n  \"InvalidAddressBecauseDestinationIsAlsoSource\",\n);\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\n  \"ManagerAppDepUninstallRequired\",\n);\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerFirmwareNotEnoughSpace\",\n);\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\n  \"NotEnoughBalanceInParentAccount\",\n);\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\n  \"NotEnoughBalanceBecauseDestinationNotCreated\",\n);\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountReceive\",\n);\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountSend\",\n);\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\n  \"TransportInterfaceNotAvailable\",\n);\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\n  \"TransportWebUSBGestureRequired\",\n);\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\n  \"TransactionHasBeenValidatedError\",\n);\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\n  \"TransportExchangeTimeoutError\",\n);\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\n\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\n  \"ReplacementTransactionUnderpriced\",\n);\n\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n\n// Represents the type of all the classes created with createCustomErrorClass\nexport type CustomErrorClassType = ReturnType<typeof createCustomErrorClass>;\n\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport enum HwTransportErrorType {\n  Unknown = \"Unknown\",\n  LocationServicesDisabled = \"LocationServicesDisabled\",\n  LocationServicesUnauthorized = \"LocationServicesUnauthorized\",\n  BluetoothScanStartFailed = \"BluetoothScanStartFailed\",\n}\n\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n  type: HwTransportErrorType;\n\n  constructor(type: HwTransportErrorType, message: string) {\n    super(message);\n    this.name = \"HwTransportError\";\n    this.type = type;\n\n    // Needed as long as we target < ES6\n    Object.setPrototypeOf(this, HwTransportError.prototype);\n  }\n}\n\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n  id: string;\n  constructor(message: string, id: string) {\n    const name = \"TransportError\";\n    super(message || name);\n    this.name = name;\n    this.message = message;\n    this.stack = new Error(message).stack;\n    this.id = id;\n  }\n}\n\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\n\nexport const StatusCodes = {\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  CODE_BLOCKED: 0x9840,\n  CODE_NOT_INITIALIZED: 0x9802,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n  CUSTOM_IMAGE_EMPTY: 0x662e,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  FILE_NOT_FOUND: 0x9404,\n  GP_AUTH_FAILED: 0x6300,\n  HALTED: 0x6faa,\n  INCONSISTENT_FILE: 0x9408,\n  INCORRECT_DATA: 0x6a80,\n  INCORRECT_LENGTH: 0x6700,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  DEVICE_NOT_ONBOARDED: 0x6d07,\n  DEVICE_NOT_ONBOARDED_2: 0x6611,\n  INVALID_KCV: 0x9485,\n  INVALID_OFFSET: 0x9402,\n  LICENSING: 0x6f42,\n  LOCKED_DEVICE: 0x5515,\n  MAX_VALUE_REACHED: 0x9850,\n  MEMORY_PROBLEM: 0x9240,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  NO_EF_SELECTED: 0x9400,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  OK: 0x9000,\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  TECHNICAL_PROBLEM: 0x6f00,\n  UNKNOWN_APDU: 0x6d02,\n  USER_REFUSED_ON_DEVICE: 0x5501,\n  NOT_ENOUGH_SPACE: 0x5102,\n};\n\nexport function getAltStatusMessage(code: number): string | undefined | null {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6800:\n      return \"Missing critical parameter\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n    case 0x5515:\n      return \"Locked device\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n  statusCode: number;\n  statusText: string;\n\n  /**\n   * @param statusCode The error status code coming from a Transport implementation\n   * @param options containing:\n   *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n   *  . Ex: LockedDeviceError. Default to true.\n   */\n  constructor(\n    statusCode: number,\n    { canBeMappedToChildError = true }: { canBeMappedToChildError?: boolean } = {},\n  ) {\n    const statusText =\n      Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n    const smsg = getAltStatusMessage(statusCode) || statusText;\n    const statusCodeStr = statusCode.toString(16);\n    const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n\n    super(message);\n    this.name = \"TransportStatusError\";\n\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n\n    Object.setPrototypeOf(this, TransportStatusError.prototype);\n\n    // Maps to a LockedDeviceError\n    if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n      return new LockedDeviceError(message);\n    }\n  }\n}\n\nexport class LockedDeviceError extends TransportStatusError {\n  constructor(message?: string) {\n    super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n    if (message) {\n      this.message = message;\n    }\n    this.name = \"LockedDeviceError\";\n    Object.setPrototypeOf(this, LockedDeviceError.prototype);\n  }\n}\n\n// Represents the type of the class TransportStatusError and its children\nexport type TransportStatusErrorClassType = typeof TransportStatusError | typeof LockedDeviceError;\n\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}