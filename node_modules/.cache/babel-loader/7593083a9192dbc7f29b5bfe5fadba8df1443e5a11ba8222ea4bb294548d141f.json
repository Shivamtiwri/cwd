{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\delll\\\\Desktop\\\\mini\\\\src\\\\WalletContextProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { PhantomWalletAdapter, UnsafeBurnerWalletAdapter } from \"@solana/wallet-adapter-wallets\";\nimport { WalletModalProvider, WalletDisconnectButton, WalletMultiButton } from \"@solana/wallet-adapter-react-ui\";\nimport { clusterApiUrl, Connection } from \"@solana/web3.js\";\n\n// Default styles that can be overridden by your app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"@solana/wallet-adapter-react-ui/styles.css\");\nconst Wallet = ({\n  children\n}) => {\n  _s();\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Testnet;\n\n  // You can also provide a custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(() => [new PhantomWalletAdapter(), new UnsafeBurnerWalletAdapter()], [network]);\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      autoConnect: true,\n      children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Wallet, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useMemo","ConnectionProvider","WalletProvider","WalletAdapterNetwork","PhantomWalletAdapter","UnsafeBurnerWalletAdapter","WalletModalProvider","WalletDisconnectButton","WalletMultiButton","clusterApiUrl","Connection","jsxDEV","_jsxDEV","require","Wallet","children","_s","network","Testnet","endpoint","wallets","autoConnect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/delll/Desktop/mini/src/WalletContextProvider.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  PhantomWalletAdapter,\r\n  UnsafeBurnerWalletAdapter,\r\n} from \"@solana/wallet-adapter-wallets\";\r\nimport {\r\n  WalletModalProvider,\r\n  WalletDisconnectButton,\r\n  WalletMultiButton,\r\n} from \"@solana/wallet-adapter-react-ui\";\r\nimport { clusterApiUrl, Connection } from \"@solana/web3.js\";\r\n\r\n// Default styles that can be overridden by your app\r\nrequire(\"@solana/wallet-adapter-react-ui/styles.css\");\r\n\r\nconst Wallet = ({ children }) => {\r\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\r\n  const network = WalletAdapterNetwork.Testnet;\r\n\r\n  // You can also provide a custom RPC endpoint.\r\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\r\n\r\n  const wallets = useMemo(\r\n    () => [new PhantomWalletAdapter(), new UnsafeBurnerWalletAdapter()],\r\n    [network]\r\n  );\r\n\r\n  return (\r\n    <ConnectionProvider endpoint={endpoint}>\r\n      <WalletProvider wallets={wallets} autoConnect>\r\n        <WalletModalProvider>\r\n          {/* <WalletMultiButton /> */}\r\n          {/* <WalletDisconnectButton /> */}\r\n          {children}\r\n        </WalletModalProvider>\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SACEC,kBAAkB,EAClBC,cAAc,QACT,8BAA8B;AACrC,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SACEC,oBAAoB,EACpBC,yBAAyB,QACpB,gCAAgC;AACvC,SACEC,mBAAmB,EACnBC,sBAAsB,EACtBC,iBAAiB,QACZ,iCAAiC;AACxC,SAASC,aAAa,EAAEC,UAAU,QAAQ,iBAAiB;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAC,OAAO,CAAC,4CAA4C,CAAC;AAErD,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B;EACA,MAAMC,OAAO,GAAGd,oBAAoB,CAACe,OAAO;;EAE5C;EACA,MAAMC,QAAQ,GAAGnB,OAAO,CAAC,MAAMS,aAAa,CAACQ,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEjE,MAAMG,OAAO,GAAGpB,OAAO,CACrB,MAAM,CAAC,IAAII,oBAAoB,CAAC,CAAC,EAAE,IAAIC,yBAAyB,CAAC,CAAC,CAAC,EACnE,CAACY,OAAO,CACV,CAAC;EAED,oBACEL,OAAA,CAACX,kBAAkB;IAACkB,QAAQ,EAAEA,QAAS;IAAAJ,QAAA,eACrCH,OAAA,CAACV,cAAc;MAACkB,OAAO,EAAEA,OAAQ;MAACC,WAAW;MAAAN,QAAA,eAC3CH,OAAA,CAACN,mBAAmB;QAAAS,QAAA,EAGjBA;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEzB,CAAC;AAACT,EAAA,CAvBIF,MAAM;AAAAY,EAAA,GAANZ,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}